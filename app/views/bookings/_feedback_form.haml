- @review ||= Review.new
- render_flash
- if @review.persisted?
	.p-20.t-c
		.wait
	:javascript
		var auto = setTimeout(function(){ submitRedirect(); }, 3000);
		function submitRedirect() {
			clearTimeout(auto);
			window.location = "/bookings/#{@booking.encoded_id}/feedback";
		}
- else
	= form_for :review, html: {:onsubmit => "return SubmitForm(this,'/bookings/#{@booking.encoded_id}/feedback','FeedbackDiv');", :id=>"FeedbackForm", :action => "javascript:void(0)", "data-ajax" => "false" } do |f|
		- render_flash
		- if @review.errors.any?
			#error_explanation.alert.alert-danger
				%h3= "#{pluralize(@review.errors.count, "error")} prohibited this order from being saved:"
				%ul
					- @review.errors.full_messages.each do |msg|
						%li= msg
		.panel.panel-default
			.panel-heading
				%h1.panel-title Please Give Us Your Feedback
			.panel-body
				.form
					.form-group
						%label #{CommonHelper::RATINGS_QUESTION[0]} *
						%p.form-contol
							= f.select(:rating_tech, CommonHelper::RATINGS, {:include_blank => "Please Select"} ,{ id:"FeedbackRatingTech", class:"form-control validate-presence", data:{"dummy-title" => "Please Select"}})
							#FeedbackRatingTechError.error
								= errortxt(@review.errors[:rating_tech].uniq.join(', '))
					.form-group
						%label #{CommonHelper::RATINGS_QUESTION[1]} *
						%p.form-contol
							= f.select(:rating_condition, CommonHelper::RATINGS, {:include_blank =>"Please Select"} ,{id: "FeedbackRatingCondition", class: "form-control validate-presence", data:{"dummy-title"=>"Please Select"}})
							#FeedbackRatingConditionError.error
								= errortxt(@review.errors[:rating_condition].uniq.join(', '))
					.form-group
						%label #{CommonHelper::RATINGS_QUESTION[2]} *
						%p.form-contol
							= f.select(:rating_location, CommonHelper::RATINGS, {:include_blank =>"Please Select"} ,{id:"FeedbackRatingLocation", class:"form-control validate-presence", data:{"dummy-title"=>"Please Select"}})
							#FeedbackRatingLocationError.error
								= errortxt(@review.errors[:rating_location].uniq.join(', '))
					.form-group
						%label #{CommonHelper::RATINGS_QUESTION[3]} *
						%p.form-contol
							= f.select(:rating_friendly, CommonHelper::RATINGS,{:include_blank =>"Please Select"} ,{id:"FeedbackRatingFriendly", class:"form-control validate-presence", data:{"dummy-title"=>"Please Select"}})
							#FeedbackRatingFriendlyError.error
								= errortxt(@review.errors[:rating_friendly].uniq.join(', '))
					.form-group
						%label.control-label Any Comments	
						%p.form-contol
							= f.text_area(:comment, :class=>"col-sm-10 form-control")
					.fc
					.t-c
						.p-10.red Fields marked with * are compulsory
						.p-10
							= f.submit "Save Feedback",:class=>"btn btn-default"
							#FeedbackWait{style: "display:none;"}
								.wait
