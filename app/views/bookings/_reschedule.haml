- render_flash
- if !@success
	.bg-e.p-10.r-5.m-b10
		.row.f-b.m-b5.size-16
			.col-md-6
				Current Start Time
			.col-md-6.t-r
				Current End Time
		.row.size-14
			.col-md-6
				= @booking.starts_was.strftime("%d/%m/%Y %H:%M %p (%A)")
			.col-md-6.t-r
				= @booking.ends_was.strftime("%d/%m/%Y %H:%M %p (%A)")
	- if !@confirm
		%h4.m-t20
			Please select a new time
	%form{:id => "SearchForm", :onsubmit => "return SubmitForm(this,'/bookings/#{@booking.encoded_id}/reschedule','ModalContent');", :action => "javascript:void(0)", "data-ajax" => "false"}
		- if @confirm
			.bg-c.p-10.r-5.m-b10
				.row.f-b.m-b5.size-16
					.col-md-6
						New Start Time
					.col-md-6.t-r
						New End Time
				.row.size-14
					.col-md-6
						= @booking.starts.strftime("%d/%m/%Y %H:%M %p (%A)")
					.col-md-6.t-r
						= @booking.ends.strftime("%d/%m/%Y %H:%M %p (%A)")
				.hide
					%input{name: 'starts', type: "text", value: @booking.starts.strftime("%d/%m/%Y %H:%M"), readonly: 'true'}
					%input{name: 'ends', type: "text", value: @booking.ends.strftime("%d/%m/%Y %H:%M"), readonly: 'true'}
			= render :partial => "/bookings/outstanding_small"
		- else
			.row.size-14
				.col-md-6
					Start Time
				.col-md-6
					End Time
			.row
				.search-header
					.col-md-6
						- if Time.now > (@booking.starts_was - 1.hours)
							= @booking.starts_was.strftime("%d/%m/%Y %H:%M %p (%A)")
						- else
							.item
								#StartDate.box
									.cal
									.txt
										%input#StartDateVal.datetime.validate-presence{name: 'starts', type: "text", value: @booking.starts.strftime("%d/%m/%Y %H:%M"), readonly: 'true'}
									.arrw
									.fc
								#StartDateValError.error
									= errortxt(@booking.errors[:starts].uniq.join(', '))
					.col-md-6
						.item.fr
							#EndDate.box
								.cal
								.txt
									%input#EndDateVal.datetime.validate-presence{name: 'ends', type: "text", value: @booking.ends.strftime("%d/%m/%Y %H:%M"), readonly: 'true'}
								.arrw
								.fc
							#EndDateValError.error
								= errortxt(@booking.errors[:ends].uniq.join(', '))
						.fc
		.p-t10
			- if @confirm
				- if !@fare.blank?
					- if @fare[:refund] == 0 && @fare[:total] > 0
						- txt = 'Proceed to Payment'
					- else
						- txt = 'Confirm'
					#SearchSubmit
						= submit_tag txt, :class => 'btn btn-default'
					#SearchWait.p-5{style: 'display:none;'}
						.wait
			- else
				#SearchSubmit
					= submit_tag "Submit", :class => 'btn btn-default'
				#SearchWait.p-5{style: 'display:none;'}
					.wait
		.fc
	:javascript
		initializeDatePicker();
- else
	.t-c
		%br/
		%br/
		%br/
		.wait
		%br/
		%br/
		- if current_user.support? || @booking.outstanding <= 0
			:javascript
				var auto = setTimeout(function(){ submitRedirect(); }, 3000);
				function submitRedirect() {
					clearTimeout(auto);
					location.reload();
				}
		- else		
			Please wait while we proceed for payment
			%br/
			%br/
			:javascript
				var auto = setTimeout(function(){ submitRedirect(); }, 3000);
				function submitRedirect() {
					clearTimeout(auto);
					window.location = "/bookings/#{@booking.encoded_id}/dopayment";
				}
